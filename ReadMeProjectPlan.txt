І так
Весь проект доведеться поділити на кілька версій програми, у яких ми реалізовуватимемо різні окремі фічі і нарощуватимемо функціонал. Для початку було б добре зробити першу версію до кінця канікул. Як я її собі уявляю:

V.1.0
1. Ми маємо програму на андроїд яка має певний початковий простий інтерфейс. 
2. В цьому інтерфейсі повинна розміщуватись одна кнопка і бажано якийсь тестовий лейбл типу консолі виводу для перевірки результатів. 
3. При нажиманні на кнопку, програма друкує в консоль координати пристрою і відправляє координати нашого пристрою на гугл-картах на сервер, після чого сервер відправляє сигнал про успішну доставку данних у програму про що власне сама програма повідомить виводом в консоль якимось ключовим словом. 
4. Також потрібно зробити сам сервер, на який відправлятимуться данні і який буде їх обробляти.

Щодо розподілу обов’язків, для початку потрібно визначитись що саме треба буде зробити. Відповідно до першої тестової версії, потрібно зробити 
1. Програму-сервер на комп’ютер
2. Сам додаток на андроїд 
3.  Прокласти порти для доступу до серверу (цим я особисто займусь, в мене вже є трохи досвіду в портуванні прог і серверів)

Перша версія проги складатиметься з підверсій, оскільки так буде простіше розпланувати і реалізувати прогу. 
Ось планування створення першого інстансу:
V.1.0.0
Створюємо базову частину аплікації під андроїд, поки що без коннекту до сервера і залучення АПІ від гугла. Просто інтерфейс описаний в першій версії але в консоль при нажатті на кнопку виводиметься якесь ключове слово яке позначатиме успішну реалізацію.

V.1.0.1
Додаємо гугл АПІ, розбираємось з ним і додаємо визначення координат до програми. При натисканні на кнопку в консоль повинні будуть виводитись вже координати. 

V.1.0.2
Створюємо початковий сервер і забезпечуємо просте і еффективне з’єднання між прогою і сервером. Додаємо можливість передачі данних між клієнтом і сервером для передачі координат. При отриманні координат сервер відправлятиме повідомлення про це в консоль на додатку на андроїді.

Ось наш план дій на найближчий тиждень. Спочатку працюватимемо над інтерфейсом всі разом. Я постараюсь створити репозиторій на гіт хабі щоб було легше тим всім займатись.Потім хтось продовжить роботу з інтерфейсом, хтось почне працювати з гугл АПІ, і ще хтось перейде на роботу з сервером і коннектом з ним.

Ліричний відступ
Впринципі можливий варіант того що варто зробити першу версію в браузері, що явно спростить всю справу на початку. (І я знаю що це нікому не подобається, але починати з чогось треба і це можливо більш оптимальний і простий варіант ніж ми зараз думаємо)

Пост скриптом
Для того щоб написати сервер, думаю, знадобиться двоє людей. Для власне додатку відповідно потрібно теж двоє людей. Ще один буде поєднувати і тестувати всю ту єресь,  а також допомагати при необхідності при створенні сервера чи додатку. Також він може виконувати роль представника тіми, і він, скоріш за все, буде направляти вектор розвитку програми і проекту в цілому.  Хоча для початку п’ятому доведеться теж помучитись над розробкою і стабільністю сервера. 

Тепер щодо наступних версій: 
V.1.1 
1. Інтерфейс той самий або трохи удосконалений/дороблений. 
2. Тепер програма повинна визначати ще й напрямок погляду камери, або ж просто вектор напряму, за яким ми і будемо в майбутньому визначати, на який будинок напрямлений пристрій. (Але фіксуємо об’єкт ще не через камеру, а просто наводячи телефон)
3. Інфа так само виводиметься в консоль. 
4. На стороні сервера ж потрібно буде створити базу данних будівель які ми будем визначати, їх координати і мінімальну інфу про них. 

V.1.2
1. До інтерфейсу додаються окремі категорії, деякі можливо пусті. 
2. Додаємо фіксування об’єкту через камеру, тобто наводимось вже через саму камеру при нажиманні кнопки. 
3. Консоль виводу так само видає спочатку координати, але тепер при отриманні від сервера інфи виводить після координат її. 
4. Інфа буде спочатку мати наступний вигляд: 
	1) Назва будівлі
	2) За наявності - дата побудування
	3) подальші пункти вирішимо в майбутньому
5. На стороні сервера через координати і напрямок вектора визначаєм колізію вектора з будинком. Довжина вектора - 100-200 метрів. Якщо колізія не пройшла - повертаємо інфу про це пристрою, додаток виведе на екран повідомлення про це. 

V.1.3
1. Оптимізуємо алгоритми обробки інфи на стороні сервера
2. Реалізовуємо решту функцій які заплануємо в майбутньому. Під це можна виділити кілька наступних версій. 
3. Повністю завершуємо інтерфейс за подальші кілька білдів проги

V.2.0
Фінальна версія повністю готової проги. 